# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: node:18.17.1

stages: # List of stages for jobs, and their order of execution
  - build
  - deploy

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - cd ${CI_PROJECT_DIR}
    - node -v
    - npm -v
    # - echo "start install..."
    # - npm install
    # - echo "install done"
    # - echo "start build..."
    # - npm run build
    # - echo "build done"
    - ls -l
  # artifacts:
  #   paths:
  #     - dist/
  tags:
    - 'docker'
  only:
    - 'test'

deploy-job: # This job runs in the deploy stage.
  stage: deploy
  image: docker
  # dependencies:
  #   - build-job
  before_script:
    - docker ps
  script:
    - echo "deploy start..."
    - docker build -t template-server .
    - if [ $(docker ps -aq --filter name=template-server) ]; then docker rm -f template-server;fi
    - docker run -d -p 8089:80 --name template-server template-server
    - echo "deploy done"
  tags:
    - 'docker'
  only:
    - 'test'
